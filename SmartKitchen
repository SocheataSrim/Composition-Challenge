public class SmartKitchen {
    private CoffeeMaker brewMaster;
    private DishWasher dishWasher;
    private Refrigerator iceBox;

    public SmartKitchen(){
        brewMaster = new CoffeeMaker();
        dishWasher = new DishWasher();
        iceBox = new Refrigerator();
    }

    public CoffeeMaker getBrewMaster() {
        return brewMaster;
    }

    public DishWasher getDishWasher() {
        return dishWasher;
    }

    public Refrigerator getIceBox() {
        return iceBox;
    }

    public void setKitchenState(boolean coffeeFlag, boolean fridgeFlag, boolean dishWasherFlag){
        brewMaster.setHasWorktoDo(coffeeFlag);
        iceBox.setHasWorktoDo(fridgeFlag);
        dishWasher.setHasWorktoDo(dishWasherFlag);
    }

    public void doKitchenWOrk(){
        brewMaster.brewCoffee();
        iceBox.orderFood();
        dishWasher.doDishes();
    }
}
    class CoffeeMaker{
    private boolean hasWorktoDo;

        public void setHasWorktoDo(boolean hasWorktoDo) {
            this.hasWorktoDo = hasWorktoDo;
        }
        public void brewCoffee(){
            if(hasWorktoDo){
                System.out.println("Brewing Coffee");
                hasWorktoDo = false;
            }
        }
    }

class DishWasher{
    private boolean hasWorktoDo;

    public void setHasWorktoDo(boolean hasWorktoDo) {
        this.hasWorktoDo = hasWorktoDo;
    }
    public void doDishes(){
        if(hasWorktoDo){
            System.out.println("Washing Dishes");
            hasWorktoDo = false;
        }
    }
}

class Refrigerator{
    private boolean hasWorktoDo;

    public void setHasWorktoDo(boolean hasWorktoDo) {
        this.hasWorktoDo = hasWorktoDo;
    }
    public void orderFood(){
        if(hasWorktoDo){
            System.out.println("Ordering food");
            hasWorktoDo = false;
        }
    }
}
